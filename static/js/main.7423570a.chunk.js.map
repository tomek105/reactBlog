{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","src","alt","to","BlogList","title","blogs","map","blog","id","author","useFetch","url","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7423570a.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (       \r\n            <nav> \r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <img src=\"./img/mozy.svg\" alt=\"logo\"></img>\r\n                        <p>myBlogs</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"links\">\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/create\" >New Blog</Link>\r\n                    </div>\r\n                </div>                       \r\n            </nav>        \r\n     );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({ title, blogs }) => {\r\n    // const blogs = pro.blogs;\r\n    // const title = pro.title;\r\n    return (\r\n        <div className=\"blog-list\">\r\n            {\r\n                blogs.map((blog) => (\r\n                    <div className=\"blog-preview\" key={blog.id}>\r\n                        <Link to={`/blogs/${blog.id}`}>\r\n                            <img src={`https://picsum.photos/id/${blog.id + 16}/300/200`}></img>\r\n                            <h2>{blog.title}</h2>\r\n                            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\r\n                            <p>Made by {blog.author}</p>\r\n                        </Link>                 \r\n                    </div>\r\n                ))\r\n            } \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogList;","import {useState, useEffect} from 'react'\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        const abortCont  = new AbortController();\r\n\r\n        fetch(url, { signal: abortCont.signal})\r\n        .then(res=>{         \r\n            if(!res.ok){\r\n                throw Error('Could not fetch the data');     \r\n            }\r\n            setError(null)\r\n            return  res.json();\r\n        })\r\n        .then(data =>\r\n            {\r\n                setData(data);\r\n                setIsLoading(false);\r\n                setError(null);\r\n            })\r\n        .catch(err =>\r\n            {\r\n                if(err.name === \"AbortError\")\r\n                {\r\n                    console.log(\"Fetch aborted\");\r\n                }\r\n                else{\r\n                    setIsLoading(false);\r\n                    setError(err.message);\r\n                }              \r\n            })\r\n\r\n            return () => abortCont.abort(); //useEffect cleanup function\r\n\r\n    }, [url])\r\n\r\n    return { data, isLoading, error };\r\n}\r\n \r\nexport default useFetch;","import BlogList from \"./BlogList\";\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {\r\n    const { data: blogs, isLoading, error } = useFetch('http://localhost:8000/blogs'); //custom made hook\r\n\r\n    return ( \r\n        <div className=\"home\">\r\n            <div className=\"container\">\r\n                {error && <div>{error}</div>}\r\n                {isLoading && <div>Loading...</div>}\r\n                {blogs &&<BlogList blogs={blogs} title=\"Articles\"/>}\r\n            </div>           \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n     const [title, setTitle] = useState(\"\");\r\n     const [body, setBody] = useState(\"\");\r\n     const [author, setAuthor] = useState(\"Tomasz\");\r\n     const [isLoading, setIsLoading] = useState(false);\r\n     const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = {title, body, author};\r\n        \r\n        setIsLoading(true);\r\n\r\n        fetch('http://localhost:8000/blogs',{\r\n            method:\"POST\",\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        })\r\n        .then(() =>{\r\n            console.log('new blog added');\r\n            setIsLoading(false);\r\n            // history.go(\"-1\")\r\n            history.push('/')\r\n        })\r\n    }\r\n    return (  \r\n        <div className=\"create\">\r\n            <h2>Add a new blog!</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Blog title:</label>\r\n                <input \r\n                type=\"text\"\r\n                required\r\n                value={ title }\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <label>Blog body:</label>\r\n                <textarea \r\n                required\r\n                value={ body }\r\n                onChange={(e) => setBody(e.target.value)}\r\n                />\r\n                <label>Blog author:</label>\r\n                <select\r\n                value={ author }\r\n                onChange={(e) => setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"Tomasz\">Tomasz</option>                   \r\n                    <option value=\"Adam\">Adam</option>\r\n                </select>\r\n                {!isLoading&&<button>Add Blog</button>}                  \r\n                {isLoading&&<button>Sending...</button>}                  \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport  useFetch  from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n    const { id } = useParams();\r\n    const  { data: blog, isLoading, error } = useFetch(`http://localhost:8000/blogs/${id}`);\r\n    const history = useHistory();\r\n    const handleClick = () =>{\r\n        fetch(`http://localhost:8000/blogs/${id}`,{\r\n            method:\"DELETE\"\r\n        })\r\n        .then(()=>{\r\n            history.push(\"/\");\r\n        })\r\n    }\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            <div className=\"container\">\r\n                { isLoading && <div>Loading...</div> }\r\n                { error && <div>{ error }</div> }\r\n                { blog && (\r\n                <article>\r\n                    <h2>{ blog.title }</h2>\r\n                    <img src={`https://picsum.photos/id/${blog.id + 46}/1120/300`}></img>\r\n                    <p>Written by: { blog.author }</p>\r\n                    <div> { blog.body}</div>\r\n                    <button className=\"blog-details--button deleteButton\" onClick={handleClick}>Delete</button>\r\n                    <button className=\"blog-details--button backButton\" onClick={() => history.push(\"/\")}>Back</button>\r\n                </article> \r\n                )}        \r\n            </div>      \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className=\"not-found\">               \r\n            <img src=\"img/errorImg.svg\"/>\r\n            <h2>Sorry</h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to=\"/\">Back to the homepage</Link>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound  from './NotFound';\n\nfunction App() {\n\n  return (  \n    <Router>\n      <div className=\"App\">            \n        <Navbar/>\n          <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n\n            <Route path=\"/create\">\n              <Create/>\n            </Route>\n\n            <Route path=\"/blogs/:id\">\n              <BlogDetails/>\n            </Route>           \n            \n            <Route path=\"*\">\n            <NotFound/>\n            </Route>\n          </Switch>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}